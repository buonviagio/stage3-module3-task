plugins {
    id 'java-base'
    // to transform in spring boot
    id 'org.springframework.boot' version '2.7.7'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

wrapper {
    gradleVersion = gradlewVersion
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    group = 'com.mjc.school'

    // In order to apply Spring Boot plugin in subprojects
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    repositories {
        mavenCentral()
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
        }
    }

    dependencies {
        /*implementation "org.springframework:spring-context:$springVersion"*/

        // Testing
       /* testImplementation "org.springframework:spring-test:$springVersion"
        testImplementation "org.junit.jupiter:junit-jupiter-api:$jupiterVersion"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$jupiterVersion"
        testImplementation "com.tngtech.archunit:archunit:$archUnitVersion"*/

        implementation 'org.springframework.boot:spring-boot-starter-web' // Add web starter
        implementation "org.springframework.boot:spring-boot-starter-data-jpa" // To get JPA, Hibernate, etc.
        implementation "com.h2database:h2" // For H2

        // Validation (using Jakarta Bean Validation, which is standard with Spring Boot 2.x)
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        testImplementation "org.junit.jupiter:junit-jupiter-api"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
        testImplementation "com.tngtech.archunit:archunit-junit5:1.0.0"
        testImplementation "org.springframework.boot:spring-boot-starter-test" // Includes Spring Test

        // MapStruct
        annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"
        implementation "org.mapstruct:mapstruct:$mapstructVersion"

        // Lombok
        compileOnly "org.projectlombok:lombok:$lombokVersion"
        annotationProcessor "org.projectlombok:lombok:$lombokVersion"

        // https://mvnrepository.com/artifact/org.springframework/spring-aspects
        // Aspects
        implementation "org.springframework:spring-aspects:$aspectsVersion"

        // Mockito
        testImplementation "org.mockito:mockito-core:3.+"
        testImplementation 'org.mockito:mockito-junit-jupiter:5.7.0'
    }
    test {
        useJUnitPlatform()
    }
}

task repack(type: Jar, dependsOn: ':module-main:build') {
    if (findProject(':module-main') != null) {
        entryCompression = ZipEntryCompression.STORED
        def buildJar = zipTree("${project(':module-main').buildDir}/libs/module-main.jar")
        from(buildJar) { into('/') }
        manifest {
            attributes(
                    'Main-Class': 'com.mjc.school.Main'
            )
        }
    }
}